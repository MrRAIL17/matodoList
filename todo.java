import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// D√©finition des statuts possibles des t√¢ches
enum Status {
    PENDING, ONGOING, DONE;
}

// Classe repr√©sentant une t√¢che
class Task {
    private String title;
    private String description;
    private Status status;
    private LocalDate createdDate;

    public Task(String title, String description) {
        this.title = title;
        this.description = description;
        this.status = Status.PENDING; // Statut par d√©faut
        this.createdDate = LocalDate.now(); // Date de cr√©ation
    }

    // Getters et Setters
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Status getStatus() {
        return status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }

    public LocalDate getCreatedDate() {
        return createdDate;
    }

    // Affichage des d√©tails de la t√¢che
    public void displayTask() {
        System.out.println("Titre       : " + title);
        System.out.println("Description : " + description);
        System.out.println("Statut      : " + status);
        System.out.println("Cr√©√©e le    : " + createdDate);
        System.out.println("-------------------------");
    }
}

// Classe g√©rant la To-Do List
class ToDoList {
    private List<Task> tasks = new ArrayList<>();

    // Ajouter une t√¢che
    public void addTask(String title, String description) {
        tasks.add(new Task(title, description));
        System.out.println("‚úÖ T√¢che ajout√©e avec succ√®s !");
    }

    // Modifier une t√¢che (titre, description, statut)
    public void modifyTask(int index, String newTitle, String newDescription, Status newStatus) {
        if (index >= 0 && index < tasks.size()) {
            Task task = tasks.get(index);
            task.setTitle(newTitle);
            task.setDescription(newDescription);
            task.setStatus(newStatus);
            System.out.println("‚úÖ T√¢che modifi√©e avec succ√®s !");
        } else {
            System.out.println("‚ùå Erreur : Num√©ro de t√¢che invalide !");
        }
    }

    // Supprimer une t√¢che
    public void removeTask(int index) {
        if (index >= 0 && index < tasks.size()) {
            tasks.remove(index);
            System.out.println("‚úÖ T√¢che supprim√©e !");
        } else {
            System.out.println("‚ùå Erreur : Num√©ro de t√¢che invalide !");
        }
    }

    // Afficher toutes les t√¢ches
    public void displayTasks() {
        if (tasks.isEmpty()) {
            System.out.println("üì≠ Aucune t√¢che enregistr√©e.");
        } else {
            System.out.println("\nüìå --- Liste des T√¢ches ---");
            for (int i = 0; i < tasks.size(); i++) {
                System.out.println("üîπ T√¢che " + (i + 1) + ":");
                tasks.get(i).displayTask();
            }
        }
    }
}


// Classe principale contenant la m√©thode main()
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ToDoList toDoList = new ToDoList();

        while (true) {
            System.out.println("\nüìã MENU PRINCIPAL");
            System.out.println("1Ô∏è‚É£ Ajouter une t√¢che");
            System.out.println("2Ô∏è‚É£ Modifier une t√¢che");
            System.out.println("3Ô∏è‚É£ Supprimer une t√¢che");
            System.out.println("4Ô∏è‚É£ Afficher les t√¢ches");
            System.out.println("5Ô∏è‚É£ Quitter");
            System.out.print("üëâ Choisissez une option : ");
            
            int choix = scanner.nextInt();
            scanner.nextLine(); // Consommer le retour √† la ligne

            switch (choix) {
                case 1:
                    System.out.print("üìå Titre de la t√¢che : ");
                    String title = scanner.nextLine();
                    System.out.print("üìù Description : ");
                    String description = scanner.nextLine();
                    toDoList.addTask(title, description);
                    break;
                
                case 2:
                    toDoList.displayTasks();
                    System.out.print("üîÑ Num√©ro de la t√¢che √† modifier : ");
                    int indexModif = scanner.nextInt() - 1;
                    scanner.nextLine(); // Consommer la ligne restante
                    
                    System.out.print("üìå Nouveau titre : ");
                    String newTitle = scanner.nextLine();
                    System.out.print("üìù Nouvelle description : ");
                    String newDescription = scanner.nextLine();
                    System.out.print("‚öôÔ∏è Nouveau statut (PENDING, ONGOING, DONE) : ");
                    Status newStatus = Status.valueOf(scanner.nextLine().toUpperCase());

                    toDoList.modifyTask(indexModif, newTitle, newDescription, newStatus);
                    break;

                case 3:
                    toDoList.displayTasks();
                    System.out.print("üóë Num√©ro de la t√¢che √† supprimer : ");
                    int indexSupp = scanner.nextInt() - 1;
                    toDoList.removeTask(indexSupp);
                    break;

                case 4:
                    toDoList.displayTasks();
                    break;

                case 5:
                    System.out.println("üëã Programme termin√©.");
                    scanner.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("‚ùå Choix invalide !");
            }
        }
    }
}